@model CYJ.Models.ServiceDelivery

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_mytemplate.cshtml";
}
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style type="text/css">
        #container {
            min-width: 310px;
            max-width: 800px;
            height: 500px;
            margin: 0 auto
        }
    </style>
</head>

<body>
    <center>
        <div>
        <center><h1><img src="~/Content/mytemplate/img/faces/servicedeliveryICON.png" style="width:60px; height:60px;" /> SERVICE DELIVERY</h1></center>
        <script src="~/Scripts/code/highcharts.js"></script>
        <script src="~/Scripts/code/modules/series-label.js"></script>
        <script src="~/Scripts/code/modules/exporting.js"></script>
            </div>
        <div id="container"></div>



        <script type="text/javascript">
            Highcharts.setOptions({
                colors: ['rgb(62, 194, 207)', 'rgb(241, 96, 74)', '#BCC65C', '#FBAE3B']
            });

            Highcharts.chart('container', {

                title: {
                    text: 'Service Delivery'
                },

                subtitle: {
                    text: 'blahblahblah'
                },

                yAxis: {
                    title: {
                        text: 'Performance'
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle'
                },

                plotOptions: {
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        pointStart: 1
                    }
                },

                series: [{
                    name: 'Math',
                    data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175]
                }, {
                    name: 'ELA',
                    data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434]
                }, {
                    name: 'Behavior',
                    data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387]
                }, {
                    name: 'Attendance',
                    data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227]
                }],

                responsive: {
                    rules: [{
                        condition: {
                            maxWidth: 500
                        },
                        chartOptions: {
                            legend: {
                                layout: 'horizontal',
                                align: 'center',
                                verticalAlign: 'bottom'
                            }
                        }
                    }]
                }

            });
        </script>

    </center>
    </div>
    @Html.ActionLink("View Goal Report","Index")
    @Html.ActionLink("Add a New Goal", "Create")
</body>
</html>


<h2>Details</h2>

<div>
    <h4>ServiceDelivery</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.teamName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.teamName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.workstreamName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.workstreamName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.categoryName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.categoryName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.subcategoryName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.subcategoryName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.goalName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.goalName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.goalValue)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.goalValue)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
